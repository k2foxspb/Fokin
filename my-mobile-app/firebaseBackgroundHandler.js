// Firebase background message handler
// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–æ–≥–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ñ–æ–Ω–µ –∏–ª–∏ –∑–∞–∫—Ä—ã—Ç–æ

import messaging from '@react-native-firebase/messaging';
import AsyncStorage from '@react-native-async-storage/async-storage';
import {Platform} from "react-native";

messaging().setBackgroundMessageHandler(async (remoteMessage) => {
  console.log('üî• [FCM] Background message received:', remoteMessage);

  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ–Ω–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    if (remoteMessage.data?.type === 'message_notification') {
      const messageInfo = {
        chatId: remoteMessage.data.chatId,
        senderId: remoteMessage.data.senderId,
        timestamp: Date.now(),
        processed: false,
        messageId: remoteMessage.messageId || ''
      };

      await AsyncStorage.setItem('lastBackgroundMessage', JSON.stringify(messageInfo));
      console.log('üî• [FCM] Background message info saved');
    }

    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ badge (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
    if (Platform.OS === 'ios') {
      // iOS badge –æ–±—Ä–∞–±–æ—Ç–∫–∞
      const currentBadge = await messaging().getApplicationBadge();
      await messaging().setApplicationBadge(currentBadge + 1);
    }

  } catch (error) {
    console.error('üî• [FCM] Error handling background message:', error);
  }
});

console.log('üî• [FCM] Background message handler registered');
